#! /bin/sh
#
#  This script supports the cut_release by performing module specific
#  answers and answering module specific questions.
#
#  Module: RTEMS
#
#  $Id$
#

usage()
{
  echo $*
  exit 1
}

if test $# -lt 1 ; then
  usage "not enough arguments."
fi

case $1 in
  name)
    echo "RTEMS"
    ;;
  pretag)
    release_name=$2
    current=$3
    for version_file in \
       aclocal/version.m4 \
       cpukit/aclocal/version.m4 \
       c/src/aclocal/version.m4 \
       cpukit/aclocal/version.m4
    do
      b=`basedir $version_file`/..
      cat << EOF > $version_file
AC_DEFUN([RTEMS_VERSIONING],
m4_define([_RTEMS_VERSION],[${current}]))
EOF
      ( echo `date +"%Y-%m-%d"`"  ${user_name}" ;
        echo ;
        echo "    * ${version_file}: Updated to ${release_name}-${current}." ;
        echo ) >YYY
        cat YYY ${b}/ChangeLog >XXX
        mv XXX ${b}/ChangeLog
        cvs -d ${cvs_root} commit -F YYY ${b}/ChangeLog ${version_file}
        rm -f YYY
    done
    ;;
  postexport)
    # In order to prevent end users from having to have "developer" tools
    # like automake and autoconf, we need to ensure that the following
    # timestamp relationships hold:
    #
    #  + configure is newer than configure.in
    #  + aclocal.m4 is newer than the aclocal macros it uses
    #  + Makefile.in is newer than Makefile.am
    #
    # This regenerates all automatically generated files and ensures that
    # timestamp relationships are correct.
    #
    # NOTE: The standard way of doing this is to have a script named
    #       bootstrap at the top level.
    #
    ./bootstrap
    # now make sure the files generated by rpcgen are OK.
    touch c/src/librdbg/src/*/*/remdeb*.[hc]
    # now remove left overs from auto* -- they take 2MB even with bzip
    find . -name autom4te.cache -print | xargs -e rm -rf 
    ;;
  aftertar)
    current=$2
    reldir_curr=$3
    module_name=rtems
      ( echo
        echo "This file contains configuration information on the "
        echo "primary computer used to test and make the ${current}"
        echo "version of ${module_name}."
        echo
        echo "OS Version: " `head -1 /etc/issue`
        echo
        echo "The following RTEMS RPMs were installed on the machine"
        echo "where this release was made:"
        rpm -q -g RTEMS/4.7 | sed -e 's/^/    /'
        echo 
      ) >${reldir_curr}/TOOL_VERSIONS
    ;;
  *)
    usage "$1 is not a valid subcommand."
    ;;
esac

exit 0
