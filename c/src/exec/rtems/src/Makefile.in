#
#  $Id$
#

@SET_MAKE@
srcdir = @srcdir@
top_srcdir = @top_srcdir@
top_builddir = ../..
subdir = rtems/src

RTEMS_ROOT = @RTEMS_ROOT@
PROJECT_ROOT = @PROJECT_ROOT@

VPATH = @srcdir@

include $(RTEMS_ROOT)/make/custom/@RTEMS_BSP@.cfg
include $(RTEMS_ROOT)/make/lib.cfg

INSTALL_CHANGE = @INSTALL_CHANGE@

# We only build multiprocessing related files if HAS_MP was defined
MP_C_PIECES_yes_V = eventmp mp msgmp partmp regionmp semmp signalmp taskmp
MP_C_PIECES = $(MP_C_PIECES_$(HAS_MP)_V)

TASK_C_PIECES = tasks taskcreate taskdelete taskgetnote taskident \
    taskinitusers taskissuspended taskmode taskrestart taskresume tasksetnote \
    tasksetpriority taskstart tasksuspend taskwakeafter taskwakewhen

RATEMON_C_PIECES = ratemon ratemoncancel ratemoncreate ratemondelete \
    ratemongetstatus ratemonident ratemonperiod ratemontimeout

INTR_C_PIECES = intr intrbody intrcatch

CLOCK_C_PIECES = rtclock clockget clockset clocktick

TIMER_C_PIECES = rtemstimer timercancel timercreate timerdelete \
    timerfireafter timerfirewhen timerident timerreset

MESSAGE_QUEUE_C_PIECES = msg msgqallocate msgqbroadcast msgqcreate \
    msgqdelete msgqflush msgqgetnumberpending msgqident msgqreceive msgqsend \
    msgqsubmit msgqtranslatereturncode msgqurgent

SEMAPHORE_C_PIECES = sem semcreate semdelete semident semobtain semrelease \
    semflush semtranslatereturncode

EVENT_C_PIECES = event eventreceive eventseize eventsend eventsurrender \
    eventtimeout

SIGNAL_C_PIECES = signal signalcatch signalsend

REGION_C_PIECES = region regioncreate regiondelete regionextend \
    regiongetsegment regiongetsegmentsize regionident regionreturnsegment \
    regionreturnsegment

PARTITION_C_PIECES = part partcreate partdelete partgetbuffer partident \
    partreturnbuffer

DPMEM_C_PIECES = dpmem dpmemcreate dpmemdelete dpmemexternal2internal \
    dpmemident dpmeminternal2external

C_PIECES = attr $(TASK_C_PIECES) $(RATEMON_C_PIECES) $(INTR_C_PIECES) \
    $(CLOCK_C_PIECES) $(TIMER_C_PIECES) $(SEMAPHORE_C_PIECES) \
    $(MESSAGE_QUEUE_C_PIECES) $(EVENT_C_PIECES) $(SIGNAL_C_PIECES) \
    $(PARTITION_C_PIECES) $(REGION_C_PIECES) $(DPMEM_C_PIECES) \
    $(MP_C_PIECES)
C_FILES = $(C_PIECES:%=%.c)
C_O_FILES = $(C_PIECES:%=${ARCH}/%.o)

SRCS = $(C_FILES)
OBJS = $(C_O_FILES)

#
# Add local stuff here using +=
#

DEFINES += -D__RTEMS_INSIDE__
CPPFLAGS +=
CFLAGS += $(CFLAGS_OS_V)

#
# Add your list of files to delete here.  The config files
#  already know how to delete some stuff, so you may want
#  to just run 'make clean' first to see what gets missed.
#  'make clobber' already includes 'make clean'
#

CLEAN_ADDITIONS +=
CLOBBER_ADDITIONS +=

all: ${ARCH} $(SRCS) ${OBJS}

Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	cd $(top_builddir) \
	 && CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status
