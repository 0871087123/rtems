#
#  $Id$
#

@SET_MAKE@
srcdir = @srcdir@
top_srcdir = @top_srcdir@
top_builddir = ../../..
subdir = c/src/lib

INSTALL = @INSTALL@

RTEMS_ROOT = $(top_srcdir)/@RTEMS_TOPdir@
PROJECT_ROOT = @PROJECT_ROOT@

VPATH = @srcdir@

include $(RTEMS_ROOT)/make/custom/$(RTEMS_BSP).cfg
include $(RTEMS_ROOT)/make/directory.cfg

# We only build the networking library if HAS_NETWORKING was defined
LIBNETWORKING_yes_V = libnetworking
LIBNETWORKING = $(LIBNETWORKING_$(HAS_NETWORKING)_V)
NETWORKING_INCLUDE_yes_V = libnetworking/include
NETWORKING_INCLUDE = $(NETWORKING_INCLUDE_$(HAS_NETWORKING)_V)

# We only build the rpc library if HAS_NETWORKING was defined
LIBRPC_yes_V = librpc
LIBRPC = $(LIBRPC_$(HAS_NETWORKING)_V)

# We only build the rdbg library if HAS_NETWORKING and HAS_RDBG was defined
LIBRDBG_yes_yes_V = librdbg
LIBRDBG = $(LIBRDBG_$(HAS_NETWORKING)_$(HAS_RDBG)_V)

# We only build the rtems++ library if HAS_CPLUSPLUS was defined
LIBRTEMSCPLUSPLUS_yes_V = librtems++
LIBRTEMSCPLUSPLUS = $(LIBRTEMSCPLUSPLUS_$(HAS_CPLUSPLUS)_V)

# General Hardware API library 
LIBHWAPI=$(wildcard libhwapi)

ifneq ($(RTEMS_CPU),unix)
LIBCHIP=libchip
endif

SUB_DIRS=start include $(NETWORKING_INCLUDE) libmisc \
         libc $(LIBCHIP) libcpu libbsp \
         $(LIBNETWORKING) $(LIBRPC) $(LIBRDBG) \
         $(LIBHWAPI) $(LIBRTEMSCPLUSPLUS) wrapup

Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	cd $(top_builddir) \
	 && CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status
