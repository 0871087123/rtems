##
## $Id$
##

## -------------------------------------------------------------------------
## NOTE: This file is rather immature and has to be considered to be 
## almost experimental.
##
## Expect frequent changes -- It deserves to be cleaned up :(
## -------------------------------------------------------------------------

## The section below is based on make/compilers/gcc-target-default.cfg
## used in former versions of RTEMS.

## 
## Set up the flags for the toolchains:
##
## We are considering 3 different building schemes here:
## * Using gcc's being able to accept -specs (aka gcc-2.8 building scheme)
## * Using gcc's not being able to accept -specs (aka gcc-2.7.2 building
##   scheme)
## * Using third party toolchains (aka non-gcc building scheme)
##
## Automake conditionals in use:
## RTEMS_USE_GCC     .. if we are using GCC

## CFLAGS_OPTIMIZE_V, CFLAGS_DEBUG_V are the values we
## would want the corresponding macros to be set to.
##
## CFLAGS_OPTIMIZE, CFLAGS_DEBUG are set by the 
## 'VARIANT=<OPTIMIZE|DEBUG>' targets to their _V values.

CPPFLAGS = @CPPFLAGS@ $(CPU_DEFINES) $(DEFINES)
CFLAGS   = @RTEMS_CFLAGS@
ASFLAGS  = $(CPU_ASFLAGS) $(CPU_CFLAGS)

depend:

## -------------------------------------------------------------------------

## translate VARIANT into VARIANT_V
VARIANT = OPTIMIZE

VARIANT_OPTIMIZE_V = OPTIMIZE
VARIANT_DEBUG_V = DEBUG
VARIANT_optimize_V = OPTIMIZE
VARIANT_debug_V = DEBUG

VARIANT_V = $(VARIANT_$(VARIANT)_V)

## Setup the variant build subdirectory
ARCH_OPTIMIZE_V = o-optimize
ARCH_DEBUG_V = o-debug

ARCH__V = $(ARCH_OPTIMIZE_V)
ARCH = $(ARCH_$(VARIANT_V)_V)

## Setup the library suffix
LIBSUFFIX_OPTIMIZE_V =
LIBSUFFIX_DEBUG_V = _g
LIBSUFFIX__V = $(LIBSUFFIX_OPTIMIZE_V)

LIB_VARIANT = $(LIBSUFFIX_$(VARIANT_V)_V)

## These are supposed to be set in make/custom/<bsp>.cfg
CPU_CFLAGS = @CPU_CFLAGS@
CFLAGS_OPTIMIZE_V = @CFLAGS_OPTIMIZE_V@
CFLAGS_DEBUG_V = @CFLAGS_DEBUG_V@
CFLAGS__V = $(CFLAGS_OPTIMIZE_V)

## ------------------------------------------------------------------------
## Setup hard-coded flags
if RTEMS_USE_GCC
## gcc >= gcc-2.8
RTEMS_CFLAGS_OPTIMIZE_V =
RTEMS_CFLAGS_DEBUG_V = -Wno-unused

## non-gcc
## We can't guess what flags might be required here.
## Pass the values from the environment if you want to apply them.
endif
RTEMS_CFLAGS__V = $(RTEMS_CFLAGS_OPTIMIZE_V)

## -------------------------------------------------------------------------
AM_CPPFLAGS = $(RTEMS_CPPFLAGS)
AM_CFLAGS =
AM_CCASFLAGS = $(RTEMS_CPPFLAGS) $(RTEMS_ASFLAGS)
