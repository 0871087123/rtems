
2001-10-16	Joel Sherrill <joel@OARcorp.com>

	* .cvsignore: Add stamp-h.in.

2001-10-16	Joel Sherrill <joel@OARcorp.com>

	* include/Makefile.am: Fixed path to cpuopts-tmp.h.

2001-10-16	Ralf Corsepius <corsepiu@faw.uni-ulm.de>

	* include/rtems/Makefile.am: Remove.
	* include/rtems/Makefile.am: Remove.
	* include/Makefile.am: Handle subdirs, require automake-1.5.
	* macros/rtems/Makefile.am: Remove.
	* macros/rtems/score/Makefile.am: Remove.
	* macros/Makefile.am: Handle subdirs, require automake-1.5.
	* inline/rtems/Makefile.am: Remove.
	* inline/rtems/score/Makefile.am: Remove.
	* inline/Makefile.am: Handle subdirs, require automake-1.5.
	* Makefile.am: require automake-1.5

2001-09-28	Ralf Corsepius <corsepiu@faw.uni-ulm.de>

	* include/rtems/score/Makefile.am: Use 'PREINSTALL_FILES ='.
	* include/rtems/Makefile.am: Use 'PREINSTALL_FILES ='.
	* inline/rtems/score/Makefile.am: Use 'PREINSTALL_FILES ='.
	* macros/rtems/score/Makefile.am: Use 'PREINSTALL_FILES ='.

2001-09-27	Eric Norum <eric.norum@usask.ca>

	* src/threadhandler.c: Now process C++ global constructors
	(_init) as part of the first task execution not in BSP space.
	This depends on the toolset defining USE_INIT_FINI so you
	have to have the right toolset version.

2001-09-23	Ralf Corsepius <corsepiu@faw.uni-ulm.de>

	* include/rtems/score/Makefile.am: Use 'PREINSTALL_FILES ='.
	* include/rtems/Makefile.am: Use 'PREINSTALL_FILES ='.
	* inline/rtems/score/Makefile.am: Use 'PREINSTALL_FILES ='.
	* macros/rtems/score/Makefile.am: Use 'PREINSTALL_FILES ='.

2001-08-30	Joel Sherrill <joel@OARcorp.com>

	*  src/coremutex.c, src/coremutexseize.c, src/coremutexsurrender.c,
	inline/rtems/score/coremutex.inl: The per thread field resource_count
	should only be manipulated when a mutex is priority ceiling or
	priority inherit.  This was reported by Chris Johns <ccj@acm.org>
	who also noticed that the use of switches for all disciplines
	generated less efficient code than using explicit tests for the one
	or two cases we were really interested in.  Further review of his
	modifications made it apparent that the "isa" methods to test mutex
	discipline were not being used so this modification was swept into
	the code as well.

2001-08-30	Joel Sherrill <joel@OARcorp.com>

	* src/coremutexseize.c: Add missing code for proper handling
	of nesting acquisitions.  This only impacts building with
	inlines disabled on the source with the "fast mutex" optimizations.
	This was post the 4.5 branch and did not impact released versions.

2001-08-16	Joel Sherrill <joel@OARcorp.com>

	* src/coremutexsurrender.c: Use holder thread not executing
	thread because even though they may and often are the same
	it is not guaranteed unless the proper attribute is set.

2001-08-16	Joel Sherrill <joel@OARcorp.com>

	* include/rtems/score/coremsg.h, src/coremsgsubmit.c: Add a new
	return status to account for blocking sends.  Otherwise, the
	caller will think that the returned message status will have
	the ultimate results of the operation.  If the send times out,
	the final status will be in the return_code of the thread.

2001-08-09	Joel Sherrill <joel@OARcorp.com>

	* include/rtems/score/coremsg.h, inline/rtems/score/coremsg.inl,
	src/coremsgsubmit.c: Unblocking message queue operations should
	NOT use _Thread_Executing for return status since it is permissible
	to invoke message send operations from an ISR.  This was reported
	by Suvrat Gupta <suvrat@utstar.com>.

2000-05-25	Sergei Organov <osv@javad.ru>

	* macros/rtems/score/coresem.inl, inline/rtems/score/coresem.inl:
	Cut and paste problem incorrectly enabled interrupts twice with
	the first time being too early.

2001-05-09	Ralf Corsepius <corsepiu@faw.uni-ulm.de>

	* include/rtems/score/.cvsignore: Add stamp-h, cpuopts.h,
	cpuopts.h.in, cpuopts-tmp.h.

2001-02-03	Ralf Corsepius <corsepiu@faw.uni-ulm.de>

	* include/rtems/Makefile.am, include/rtems/score/Makefile.am,
	inline/rtems/score/Makefile.am, macros/rtems/score/Makefile.am
	Apply include_*HEADERS instead of H_FILES.

2001-01-29	Joel Sherrill <joel@OARcorp.com>

	* src/objectextendinformation.c: Added include of string.h to
	eliminate warning.

2001-01-08	Joel Sherrill <joel@OARcorp.com>

	* src/threadinitialize.c: Fix my bad hack of Ralf's fp_area
	warning removal patch. :(

2001-01-08	Ralf Corsepius <corsepiu@faw.uni-ulm.de>

	* src/threadinitialize.c: Removed warning.

2001-01-03	Joel Sherrill <joel@OARcorp.com>

	* src/isr.c: Modify to properly dereference _ISR_Vector_table
	now that it is dynamically allocated.

2000-12-19	Joel Sherrill <joel@OARcorp.com>

	* src/isr.c: Allocate the _ISR_Vector_table all the time not just when
	we are allocating an interrupt stack.

2000-12-13	Joel Sherrill <joel@OARcorp.com>

	* include/rtems/score/isr.h, src/isr.c: Allocate it from the
	workspace rather than explicitly declaring it.  This allows
	the size to be a non-constant from the perspective of score/cpu.

2000-12-01	Joel Sherrill <joel@OARcorp.com>

	* macros/rtems/score/coresem.inl: Removed comments since convention
	calls for comments to be in inline versin.
	* macros/rtems/score/object.inl (Objects_Get_local_object): Fixed
	style to use _ prefix on variable names and use parentheses.
	* macros/rtems/score/object.inl (_Objects_Namespace_remove): Added.

2000-11-30	Joel Sherrill <joel@OARcorp.com>

	* General effort to make things compile with macros not inlines
	* inline/rtems/score/coremutex.inl: Added comment indicating
	for macros there is another copy of
	_CORE_mutex_Seize_interrupt_trylock() in src/coremutexseize.c.
	* src/coremutexseize.c: Added body of
	_CORE_mutex_Seize_interrupt_trylock() for macro case.
	* macros/rtems/score/coremutex.inl: Added prototype for 
	_CORE_mutex_Seize_interrupt_trylock() since there is a real
	body when macros are enabled.
	* macros/rtems/score/coresem.inl: Added macro implementation of
	_CORE_semaphore_Seize_isr_disable.
	* macros/score/Makefile.am: Fixed typos.
	* rtems/score/address.inl: Correct macro implementation of
	_Addresses_Is_aligned() so it would compile.
	* macros/rtems/score/coremsg.inl: Added closing parentheses.
	
2000-11-28	Chris Johns <ccj@acm.org>

	* src/heapallocate.c: Do not allow the size to overflow when
	adjusting it.  A test allocated a stack of -1 (~0). This
	actually resulted in a stack being allocated but with a
	size of 0xb. The allocator did not test the size to see if
	it rolled through 0 and so allowed the allocation to happen, the
	thread to get created. The task crashed as you would expect.

2000-11-02	Joel Sherrill <joel@OARcorp.com>

	* include/rtems/system.h: Use proper conditional (RTEMS_POSIX_API)
	so prototypes for POSIX_MP_NOT_IMPLEMENTED(), POSIX_NOT_IMPLEMENTED(),
	POSIX_BOTTOM_REACHED() are actually included.

2000-11-02	Joel Sherrill <joel@OARcorp.com>

	* include/rtems/system.h: Add prototypes for POSIX_MP_NOT_IMPLEMENTED(),
	POSIX_NOT_IMPLEMENTED(), POSIX_BOTTOM_REACHED() removed from newlib.

2000-10-18	Nick Simon <Nick.SIMON@syntegra.bt.co.uk>

	* src/heapgetinfo.c, include/rtems/score/heap.h, src/Makefile.am:
	Added _Heap_Get_information() and information control block.
	* src/heapgetinfo.c: New file.

2000-09-25	Joel Sherrill <joel@OARcorp.com>

	* rtems/system.h: Switched a29k and hppa1.1 to using cpuopts.h not
	targopts.h to reduce dependency on BSP.

2000-09-20	Joel Sherrill <joel@OARcorp.com>

	* src/objectgetbyindex.c: Do not enable dispatching on an
	error path it was not disabled on.

2000-09-04	Ralf Corsepius <corsepiu@faw.uni-ulm.de>

	* src/Makefile.am: Include compile.am.

2000-08-30	Joel Sherrill <joel@OARcorp.com>

	* Many files: Moved posix/include/rtems/posix/seterr.h to 
	score/include/rtems/seterr.h so it would be available within
	all APIs.

2000-08-17	Ralf Corsepius <corsepiu@faw.uni-ulm.de>

	* include/rtems/system.h: Include cpuopts.h for __i386__.

2000-08-10	Joel Sherrill <joel@OARcorp.com>

	* ChangeLog: New file.
