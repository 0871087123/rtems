diff -Naur gcc-4.3.2.orig/configure gcc-4.3.2/configure
--- gcc-4.3.2.orig/configure	2008-02-02 04:29:30.000000000 +0100
+++ gcc-4.3.2/configure	2008-10-03 07:13:03.000000000 +0200
@@ -2185,6 +2185,7 @@
     noconfigdirs="$noconfigdirs target-newlib target-libiberty target-libgloss ${libgcj} target-libmudflap"
     ;;
   *-*-rtems*)
+    skipdirs="$skipdirs target-libiberty"
     noconfigdirs="$noconfigdirs target-libgloss ${libgcj}"
     ;;
     # The tpf target doesn't support gdb yet.
@@ -5829,7 +5830,7 @@
        # to it.  This is right: we don't want to search that directory
        # for binaries, but we want the header files in there, so add
        # them explicitly.
-       FLAGS_FOR_TARGET=$FLAGS_FOR_TARGET' -isystem $$r/$(HOST_SUBDIR)/gcc/include'
+       FLAGS_FOR_TARGET=$FLAGS_FOR_TARGET' -isystem $$r/$(HOST_SUBDIR)/gcc/include -isystem $$r/$(HOST_SUBDIR)/gcc/include-fixed'
 
        # Someone might think of using the pre-installed headers on
        # Canadian crosses, in case the installed compiler is not fully
diff -Naur gcc-4.3.2.orig/configure.ac gcc-4.3.2/configure.ac
--- gcc-4.3.2.orig/configure.ac	2008-02-02 04:29:30.000000000 +0100
+++ gcc-4.3.2/configure.ac	2008-10-03 07:13:03.000000000 +0200
@@ -462,6 +462,7 @@
     noconfigdirs="$noconfigdirs target-newlib target-libiberty target-libgloss ${libgcj} target-libmudflap"
     ;;
   *-*-rtems*)
+    skipdirs="$skipdirs target-libiberty"
     noconfigdirs="$noconfigdirs target-libgloss ${libgcj}"
     ;;
     # The tpf target doesn't support gdb yet.
@@ -2340,7 +2341,7 @@
        # to it.  This is right: we don't want to search that directory
        # for binaries, but we want the header files in there, so add
        # them explicitly.
-       FLAGS_FOR_TARGET=$FLAGS_FOR_TARGET' -isystem $$r/$(HOST_SUBDIR)/gcc/include'
+       FLAGS_FOR_TARGET=$FLAGS_FOR_TARGET' -isystem $$r/$(HOST_SUBDIR)/gcc/include -isystem $$r/$(HOST_SUBDIR)/gcc/include-fixed'
 
        # Someone might think of using the pre-installed headers on
        # Canadian crosses, in case the installed compiler is not fully
diff -Naur gcc-4.3.2.orig/gcc/config/m32c/rtems.h gcc-4.3.2/gcc/config/m32c/rtems.h
--- gcc-4.3.2.orig/gcc/config/m32c/rtems.h	1970-01-01 01:00:00.000000000 +0100
+++ gcc-4.3.2/gcc/config/m32c/rtems.h	2008-10-03 07:14:11.000000000 +0200
@@ -0,0 +1,33 @@
+/* Definitions for rtems targeting a M32C using ELF.
+   Copyright (C) 2008, Free Software Foundation, Inc.
+   Contributed by Joel Sherrill (joel@OARcorp.com).
+
+This file is part of GCC.
+
+GCC is free software; you can redistribute it and/or modify
+it under the terms of the GNU General Public License as published by
+the Free Software Foundation; either version 3, or (at your option)
+any later version.
+
+GCC is distributed in the hope that it will be useful,
+but WITHOUT ANY WARRANTY; without even the implied warranty of
+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+GNU General Public License for more details.
+
+You should have received a copy of the GNU General Public License
+along with GCC; see the file COPYING3.  If not see
+<http://www.gnu.org/licenses/>.  */
+
+/* Target OS builtins.  */
+#undef TARGET_OS_CPP_BUILTINS
+#define TARGET_OS_CPP_BUILTINS()		\
+  do						\
+    {						\
+	builtin_define ("__rtems__");		\
+	builtin_define ("__USE_INIT_FINI__");	\
+	builtin_assert ("system=rtems");	\
+    }						\
+  while (0)
+
+/* Use the default */
+#undef LINK_GCC_C_SEQUENCE_SPEC
diff -Naur gcc-4.3.2.orig/gcc/config/m32r/rtems.h gcc-4.3.2/gcc/config/m32r/rtems.h
--- gcc-4.3.2.orig/gcc/config/m32r/rtems.h	1970-01-01 01:00:00.000000000 +0100
+++ gcc-4.3.2/gcc/config/m32r/rtems.h	2008-10-03 07:14:11.000000000 +0200
@@ -0,0 +1,33 @@
+/* Definitions for rtems targeting a M32R using ELF.
+   Copyright (C) 2008, Free Software Foundation, Inc.
+   Contributed by Joel Sherrill (joel@OARcorp.com).
+
+This file is part of GCC.
+
+GCC is free software; you can redistribute it and/or modify
+it under the terms of the GNU General Public License as published by
+the Free Software Foundation; either version 3, or (at your option)
+any later version.
+
+GCC is distributed in the hope that it will be useful,
+but WITHOUT ANY WARRANTY; without even the implied warranty of
+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+GNU General Public License for more details.
+
+You should have received a copy of the GNU General Public License
+along with GCC; see the file COPYING3.  If not see
+<http://www.gnu.org/licenses/>.  */
+
+/* Target OS builtins.  */
+#undef TARGET_OS_CPP_BUILTINS
+#define TARGET_OS_CPP_BUILTINS()		\
+  do						\
+    {						\
+	builtin_define ("__rtems__");		\
+	builtin_define ("__USE_INIT_FINI__");	\
+	builtin_assert ("system=rtems");	\
+    }						\
+  while (0)
+
+/* Use the default */
+#undef LINK_GCC_C_SEQUENCE_SPEC
diff -Naur gcc-4.3.2.orig/gcc/config/m68k/t-rtems gcc-4.3.2/gcc/config/m68k/t-rtems
--- gcc-4.3.2.orig/gcc/config/m68k/t-rtems	2008-02-16 06:52:54.000000000 +0100
+++ gcc-4.3.2/gcc/config/m68k/t-rtems	2008-10-03 07:13:03.000000000 +0200
@@ -4,5 +4,6 @@
 		     || MLIB == "5206" \
 		     || MLIB == "5208" \
 		     || MLIB == "5307" \
+		     || MLIB == "5329" \
 		     || MLIB == "5407" \
 		     || MLIB == "5475")
diff -Naur gcc-4.3.2.orig/gcc/config/mips/elf.h gcc-4.3.2/gcc/config/mips/elf.h
--- gcc-4.3.2.orig/gcc/config/mips/elf.h	2007-08-02 12:49:31.000000000 +0200
+++ gcc-4.3.2/gcc/config/mips/elf.h	2008-10-03 07:13:03.000000000 +0200
@@ -48,6 +48,4 @@
 #undef  ENDFILE_SPEC
 #define ENDFILE_SPEC "crtend%O%s crtn%O%s"
 
-#define NO_IMPLICIT_EXTERN_C 1
-
 #define HANDLE_PRAGMA_PACK_PUSH_POP 1
diff -Naur gcc-4.3.2.orig/gcc/config/rs6000/rtems.h gcc-4.3.2/gcc/config/rs6000/rtems.h
--- gcc-4.3.2.orig/gcc/config/rs6000/rtems.h	2007-08-02 12:49:31.000000000 +0200
+++ gcc-4.3.2/gcc/config/rs6000/rtems.h	2008-10-03 07:13:03.000000000 +0200
@@ -49,8 +49,18 @@
 %{mcpu=604:  %{!Dppc*: %{!Dmpc*: -Dmpc604}  } } \
 %{mcpu=750:  %{!Dppc*: %{!Dmpc*: -Dmpc750}  } } \
 %{mcpu=821:  %{!Dppc*: %{!Dmpc*: -Dmpc821}  } } \
-%{mcpu=860:  %{!Dppc*: %{!Dmpc*: -Dmpc860}  } }" 
+%{mcpu=860:  %{!Dppc*: %{!Dmpc*: -Dmpc860}  } } \
+%{mcpu=8540: %{!Dppc*: %{!Dmpc*: -Dppc8540}  } }" 
 
 #undef  SUBSUBTARGET_EXTRA_SPECS
 #define SUBSUBTARGET_EXTRA_SPECS \
   { "cpp_os_rtems",		CPP_OS_RTEMS_SPEC }
+
+#undef SUBSUBTARGET_OVERRIDE_OPTIONS
+#define SUBSUBTARGET_OVERRIDE_OPTIONS		\
+  do {						\
+    if (TARGET_E500)				\
+      {						\
+	rs6000_float_gprs = 1;			\
+      }						\
+  } while(0)
diff -Naur gcc-4.3.2.orig/gcc/config/rs6000/t-rtems gcc-4.3.2/gcc/config/rs6000/t-rtems
--- gcc-4.3.2.orig/gcc/config/rs6000/t-rtems	2005-05-27 09:54:06.000000000 +0200
+++ gcc-4.3.2/gcc/config/rs6000/t-rtems	2008-10-03 07:13:03.000000000 +0200
@@ -1,12 +1,12 @@
 # Multilibs for powerpc RTEMS targets.
 
 MULTILIB_OPTIONS	= \
-mcpu=403/mcpu=505/mcpu=601/mcpu=603e/mcpu=604/mcpu=860/mcpu=7400 \
+mcpu=403/mcpu=505/mcpu=601/mcpu=603e/mcpu=604/mcpu=860/mcpu=7400/mcpu=8540 \
 Dmpc8260 \
 msoft-float
 
 MULTILIB_DIRNAMES	= \
-m403 m505 m601 m603e m604 m860 m7400 \
+m403 m505 m601 m603e m604 m860 m7400 m8540 \
 mpc8260 \
 nof
 
@@ -31,6 +31,10 @@
 # Map 750 to .
 MULTILIB_MATCHES	+= mcpu?750=
 
+# Map e500, 8548 to 8540
+MULTILIB_MATCHES	+= mcpu?8540=mcpu?e500
+MUTLILIB_MATCHES	+= mcpu?8540=mcpu?8548
+
 # Soft-float only, default implies msoft-float
 # NOTE: Must match with MULTILIB_MATCHES_FLOAT and MULTILIB_MATCHES
 MULTILIB_SOFTFLOAT_ONLY = \
@@ -64,3 +68,4 @@
 MULTILIB_EXCEPTIONS += *mcpu=750/Dmpc*
 MULTILIB_EXCEPTIONS += *mcpu=860/Dmpc*
 MULTILIB_EXCEPTIONS += *mcpu=7400/Dmpc*
+MULTILIB_EXCEPTIONS += *mcpu=8540/Dmpc*
diff -Naur gcc-4.3.2.orig/gcc/config.gcc gcc-4.3.2/gcc/config.gcc
--- gcc-4.3.2.orig/gcc/config.gcc	2008-06-09 18:32:15.000000000 +0200
+++ gcc-4.3.2/gcc/config.gcc	2008-10-03 07:13:54.000000000 +0200
@@ -1493,6 +1493,11 @@
 	extra_parts="crtinit.o crtfini.o m32rx/crtinit.o m32rx/crtfini.o"
 	use_fixproto=yes
 	;;
+m32r-*-rtems*)
+	tm_file="dbxelf.h elfos.h svr4.h ${tm_file} m32r/rtems.h rtems.h"
+	tmake_file="m32r/t-m32r t-rtems"
+	extra_parts="crtinit.o crtfini.o"
+ 	;;
 m32r-*-linux*)
 	tm_file="dbxelf.h elfos.h svr4.h linux.h ${tm_file} m32r/linux.h"
 	# We override the tmake_file for linux -- why?
@@ -2639,6 +2644,12 @@
 	extra_parts="crtbegin.o crtend.o crtbeginS.o crtendS.o"
 	use_collect2=no
 	;;
+m32c-*-rtems*)
+	tm_file="dbxelf.h elfos.h svr4.h ${tm_file} m32c/rtems.h rtems.h"
+	tmake_file="${tmake_file} t-rtems"
+	c_target_objs="m32c-pragma.o"
+	cxx_target_objs="m32c-pragma.o"
+ 	;;
 m32c-*-elf*)
 	tm_file="dbxelf.h elfos.h svr4.h ${tm_file}"
 	c_target_objs="m32c-pragma.o"
diff -Naur gcc-4.3.2.orig/libgcc/config.host gcc-4.3.2/libgcc/config.host
--- gcc-4.3.2.orig/libgcc/config.host	2008-01-25 21:49:04.000000000 +0100
+++ gcc-4.3.2/libgcc/config.host	2008-10-03 07:13:40.000000000 +0200
@@ -392,6 +392,8 @@
  	;;
 m32rle-*-elf*)
 	;;
+m32r*-*-rtems*)
+	;;
 m32r-*-linux*)
  	;;
 m32rle-*-linux*)
@@ -635,7 +637,7 @@
 am33_2.0-*-linux*)
 	extra_parts="crtbegin.o crtend.o crtbeginS.o crtendS.o"
 	;;
-m32c-*-elf*)
+m32c-*-elf*|m32c-*-rtems*)
  	;;
 *)
 	echo "*** Configuration ${host} not supported" 1>&2
