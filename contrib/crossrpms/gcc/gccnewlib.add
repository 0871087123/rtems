
%define gcc_pkgvers @GCC_VERS@
%define gcc_version %{expand:%%(echo "@GCC_VERS@" | sed -e 's,-.*,,')}
%define gcc_rpmvers %{expand:%%(echo "@GCC_VERS@" | tr - _ )}

%define build_newlib 1

%if %build_newlib
%define newlib_version		@newlib_version@
%define gccnewlib_version	gcc%{gcc_version}newlib%{newlib_version}
%endif

%define gcc_target	@target_alias@

Name:         	@rpmprefix@@tool_target@-gcc
Summary:      	@tool_target@ gcc

Group:	      	%{rpmgroup}
Version:        %gcc_rpmvers
Release:      	@GCC_RPMREL@
License:      	GPL
URL:		http://gcc.gnu.org
BuildRoot:	%{_tmppath}/%{name}-%{version}-%{release}-root-%(%{__id_u} -n)

%define _use_internal_dependency_generator 0

# default languages to build
%define _cxx		1
%define _fortran	0
%define _gcj		0
%define _gnat		0
%define _objc		0
%define _libgcj 	0


# custom defaults for specific targets
%if "@tool_target@" == "arm-rtems@osversion@"
# Gnat lacks arm support
%define _gnat		0
%endif

%if "@tool_target@" == "avr-rtems@osversion@"
%define _cxx		0
%define _fortran	0
%define _gcj		0
%define _gnat		0
%endif

%if "@tool_target@" == "h8300-rtems@osversion@"
%define _fortran	0
%define _gcj		0
%define _gnat		0
%endif

%if "@tool_target@" == "sh-rtems@osversion@"
# Triggers an ICE in GCC-4.0.0
%define _gnat		0
%endif

%if "@tool_target@" == "tic4x-rtems@osversion@"
%define _cxx		0
%define _gnat		0
%define _gcj		0
%define _fortran	0
%endif


# Allow the user to build arbitrary languages
%{?_with_cxx:%define _cxx 1}
%{?_with_fortran:%define _fortran 1}
%{?_with_gcj:%define _gcj 1}
%{?_with_gnat:%define _gnat 1}
%{?_with_objc:%define _objc 1}
%{?_with_libgcj:%define _libgcj 1}

# Allow the user to suppress building languages
%{?_without_cxx:%define _cxx 0}
%{?_without_fortran:%define _fortran 0}
%{?_without_gcj:%define _gcj 0}
%{?_without_gnat:%define _gnat 0}
%{?_without_objc:%define _objc 0}
%{?_without_libgcj:%define _libgcj 0}

%define build_cxx	%_cxx
%if "%{gcc_version}" >= "4.0.0"
%define build_f95	%_fortran
%define build_g77	0
%else
%define build_f95	0
%define build_g77	%_fortran
%endif
%define build_gnat	%_gnat
%define build_gcj	%_gcj
%define build_objc	%_objc
%define build_libgcj	%_libgcj


%if %build_gcj
# Building gcj requires bison and zlib
BuildRequires:	bison
%endif

BuildRequires:	texinfo >= 4.2
BuildRequires:	@rpmprefix@@tool_target@-binutils
BuildRequires:	@rpmprefix@@tool_target@-sys-root

Requires:	@rpmprefix@@tool_target@-binutils

%if "%{_vendor}" == "redhat"
%if %build_gcj
BuildRequires:	zlib-devel
%endif
%if %build_gnat
# Building gnat requires gnat
# This really isn't available until RedHat 8.0.  How to conditionalize this?
BuildRequires:	gcc-gnat
# Urgh, building gnat requires the target libc
BuildRequires:	@rpmprefix@@tool_target@-libc < %{newlib_version}-%{release}
%endif
%if %build_f95
BuildRequires: gmp-devel
%endif
%endif

%if "%{gcc_version}" >= "3.4"
%define gcclib %{_libdir}/gcc
%define gccexec %{_libexecdir}/gcc
%else
%define gcclib %{_libdir}/gcc-lib
%define gccexec %{_libdir}/gcc-lib
%endif

@SOURCES@

%description
Cross gcc for @tool_target@.

%prep
%setup -c -T -n %{name}-%{version}

%setup -q -T -D -n %{name}-%{version} -a0
%{?PATCH0:%patch0 -p0}

%if %build_cxx
%setup -q -T -D -n %{name}-%{version} -a1
%{?PATCH1:%patch1 -p0}
%endif

%if %build_f95
%setup -q -T -D -n %{name}-%{version} -a2
%{?PATCH2:%patch2 -p0}
%endif

%if %build_gcj
%setup -q -T -D -n %{name}-%{version} -a3
%{?PATCH3:%patch3 -p0}
%endif

%if %build_gnat
%setup -q -T -D -n %{name}-%{version} -a4
%{?PATCH4:%patch4 -p0}
%endif

%if %build_objc
%setup -T -D -n %{name}-%{version} -a5
%{?PATCH5:%patch5 -p0}
%endif

%if %build_newlib
%setup -q -T -D -n %{name}-%{version} -a50
cd newlib-%{newlib_version}
%{?PATCH50:%patch50 -p1}
cd ..
  # Copy the C library into gcc's source tree
  ln -s ../newlib-%{newlib_version}/newlib gcc-%{gcc_version}
%endif

  cd gcc-%{gcc_pkgvers}

  case @tool_target@ in
  *rtems*)
    sed -e 's/\(version_string.* = \"[^\"]*\)/\1 (RTEMS gcc-%{gcc_version}-@gcc_patch_version@\/newlib-%{newlib_version}-@newlib_patch_version@-@Release@)/' \
    gcc/version.c > gcc/version.c~
    mv gcc/version.c~  gcc/version.c
    ;;
  esac

  # Fix timestamps
    contrib/gcc_update --touch
  cd ..


%build
  mkdir -p build

  cd build

  languages="c"
%if %build_cxx
  languages="$languages,c++"
%endif
%if %build_g77
  languages="$languages,g77"
%endif
%if %build_f95
  languages="$languages,f95"
%endif
%if %build_gcj
  languages="$languages,java"
%endif
%if %build_objc
  languages="$languages,objc"
%endif
%if %build_gnat
  languages="$languages,ada"
%endif
%if %build_libgcj
  optargs="--enable-libgcj"
%endif
%if "%{_prefix}" != "/usr"
  export PATH="%{_bindir}:${PATH}"
%endif

  CC="%{__cc} ${RPM_OPT_FLAGS}" \
  ../gcc-%{gcc_pkgvers}/configure \
    --prefix=%{_prefix} \
    --bindir=%{_bindir} \
    --includedir=%{_includedir} \
    --libdir=%{_libdir} \
    --mandir=%{_mandir} \
    --infodir=%{_infodir} \
    --datadir=%{_datadir} \
    --build=%_build --host=%_host \
    --target=@tool_target@ \
    --with-gnu-as --with-gnu-ld --verbose \
    --with-newlib \
    --with-system-zlib \
    --disable-nls --without-included-gettext \
    --disable-win32-registry \
    --enable-version-specific-runtime-libs \
    --with-sysroot=%{_prefix}/@tool_target@/sys-root \
    --enable-languages="$languages" $optargs

%if "%_host" != "%_build"
  # Bug in gcc-3.2.1:
  # Somehow, gcc doesn't get syslimits.h right for Cdn-Xs
  mkdir -p gcc/include
  cp ../gcc-%{gcc_pkgvers}/gcc/gsyslimits.h gcc/include/syslimits.h
%endif

  make all
%if "%{_prefix}" != "/usr"
  make info
%endif
  cd ..

