#!/bin/sh 
#
#  Usage: mkspec CPU
#

RTEMS_DIR=`dirname $0`/@top_srcdir@

CFG=../setup.cache

specsrc=${RTEMS_DIR}/gdb/gdb.spec.in

usage()
{
  echo "$0 [options] <target_alias>"
  echo "  options:"
  echo "    -cfg <setup.cache>"
  echo "    -a <alternate specs.in>"
  exit 1 ;
}

while test $# -ge 2; do
case $1 in
-cfg)
  shift
  CFG=$1
  shift
  ;;
-a)        # alternate specs file
  shift
  specsrc=$1
  shift
  ;;
-*)
  echo "invalid option $1";
  usage
  ;;
esac
done

if test ! $# -eq 1;
then
  echo "Invalid number of arguments"
  usage
fi

# target to build for
target_alias=$1

. ./$CFG

patchn=-1
if test -n "${gdb_patch_version}"; then
patchn=`expr $patchn + 1`
PATCH1="Patch${patchn}: gdb-${gdb_version}-rtems-${gdb_patch_version}.diff"
fi

sed -e "s,@PATCH1\@,${PATCH1}," \
    -e "s,@Release\@,${gdb_rpm_release},g" \
    -e "s,@prefix\@,@prefix@,g" \
    -e "s,@target_alias\@,${target_alias},g" \
    -e "s,@rpmprefix\@,@rpmprefix@,g" \
    -e "s,@rpmgroup\@,@rpmgroup@,g" \
    -e "s,@osversion\@,@osversion@,g" \
    -e "s,@gdb_version\@,${gdb_version},g" \
    -e "s,@gdb_patch_version\@,${gdb_patch_version},g" \
    -e "s,@gdb_suffix\@,${gdb_suffix},g" \
< ${specsrc}
