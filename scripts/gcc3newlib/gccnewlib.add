#
# spec file for building gcc for rtems
# 
# Copyright  (c) 1999,2000,2001 OARCorp, Huntsville, AL
#
# please send bugfixes or comments to joel@OARcorp.com
#

%define	_prefix	@prefix@

Vendor:       OAR Corporation
Distribution: Linux
Name:         @target_alias@-gcc-newlib
Summary:      gcc and newlib C Library for @target_alias@.
Group:	      rtems
Release:      @Release@
License:      gcc is GPL/LGPL ; newlib no has restrictions on run-time usage

Autoreqprov:  	on
Packager:     	corsepiu@faw.uni-ulm.de and joel@OARcorp.com

Version:      	gcc@gcc_version@newlib@newlib_version@
# gcc 3.x and gcc 2.9
# Source0:      ftp://ftp.gnu.org/pub/gnu/gcc/gcc-@gcc_version@.tar.bz2
# gcc 2.95.x
Source0:	ftp://ftp.gnu.org/pub/gnu/gcc/gcc-@gcc_version@.tar.bz2
Source1:	ftp://sources.redhat.com/pub/newlib/newlib-@newlib_version@.tar.gz
@PATCH1@
@PATCH3@
Buildroot:	%{_tmppath}/%{name}

#
# The original sources are not included in the source RPM.
# If we included them, then the source RPMs for each target
# would duplicate MBs of source unnecessarily.  This is 
# a duplication of over 30 MBs of source for each of
# the more than 10 targets it is possible to build.
#
# You can get them yourself from the Internet and copy them to
# your /usr/src/redhat/SOURCES directory ($RPM_SOURCE_DIR).
# Or you can try the ftp options of rpm :-)
#
NoSource:	0
NoSource:	1

%define build_cxx 	1
%define build_g77 	0
%define build_objc	0
%define build_gcj	0
%define build_gnat	0

%if "@target_alias@"     == "c4x-rtems"
%define build_gnat 	0
%define build_cxx	0
%elseif "@target_alias@" == "i386-rtems"
%define build_gnat 	1
%elseif "@target_alias@" == "i960-rtems"
%define build_gnat      0
%define build_cxx	0
%elseif "@target_alias@" == "powerpc-rtems"
%define build_gnat      1
%elseif "@target_alias@" == "sparc-rtems"
%define build_gnat      1
%endif

%description
RTEMS is an open source operating system for embedded systems.

This is gcc's and newlib C Library's sources with patches for RTEMS.

 The original sources are not included in the source RPM.
 If we included them, then the source RPMs for each target
 would duplicate MBs of source unnecessarily.  This is 
 a duplication of over 30 MBs of source for each of
 the more than 10 targets it is possible to build.

 You can get them yourself from the Internet and copy them to
 your /usr/src/[redhat|packages]/SOURCES directory ($RPM_SOURCE_DIR).
 Or you can try the ftp options of rpm :-)

%prep
# untar the sources inside @target_alias@-gcc-newlib
%setup -c -T -n %{name} -a0 -a1

@PATCH2@
@PATCH4@

  # Fix timestamps
  cd gcc-@gcc_version@
    contrib/gcc_update --touch
  cd ..

  # Copy the C library into gcc's source tree
  ln -s ../newlib-@newlib_version@/newlib gcc-@gcc_version@
  test -d build || mkdir build

%build
  cd build

# HACK: This should be %{target} != %{build}, but SuSE's rpm screws it.
# %if "%{_target_os}" != "%{_build_os}"
#    CONFIGURE_ARGS="--build=%{_build} --host=%{_target}"
# %endif

  languages="c,c++"
%if %build_g77
  languages="$languages,g77"
%endif
%if %build_gcj
  languages="$languages,gcj"
%endif
%if %build_objc
  languages="$languages,objc"
%endif
%if %build_gnat
  languages="$languages,ada"
%endif
  ../gcc-@gcc_version@/configure $CONFIGURE_ARGS --target=@target_alias@ \
    --with-gnu-as --with-gnu-ld --with-newlib --verbose \
    --with-system-zlib --disable-nls \
    --enable-version-specific-runtime-libs \
    --enable-threads=rtems --prefix=%{_prefix} \
    --enable-languages=$languages
%if %build_gnat
  cd ../gcc-@gcc_version@/gcc/ada
  touch treeprs.ads [es]info.h nmake.ad[bs]
  cd ../../../build
%endif
  make all
%if %build_gnat
  cd gcc
# This is what is documented, but it doesn't work for me (RC)
#  make gnatlib_and_tools
  make cross-gnattools
  cd ..
%endif
  make info

%install
  cd build
#  # Bug in gcc-2.95.1: It doesn't build this installation directory
#  # If it doesn't find it, gcc doesn't install @target_alias@/bin/gcc
#  ../gcc-@gcc_version@/mkinstalldirs \
#    $RPM_BUILD_ROOT%{_prefix}/@target_alias@/bin
#

  make prefix=$RPM_BUILD_ROOT%{_prefix} install
  cd @target_alias@/newlib
  make prefix=$RPM_BUILD_ROOT%{_prefix} \
    bindir=$RPM_BUILD_ROOT%{_bindir} install-info
  # cd back to build/
  cd ../..

  # Bug in gcc-3.0.x: It puts the build dirs into *.la files
  files=`find ${RPM_BUILD_ROOT}%{_prefix}/@target_alias@/lib -name '*.la'`
  test -n "$files" && for i in $files; do
    rm -f $i
  done

  # Bug in gcc-2.95.x: It bogusly tries to share cpp for all targets.
  # Rename it to target_alias-cpp
#  if test -f $RPM_BUILD_ROOT%{_prefix}/bin/cpp@exe_ext@;
#  then
#    mv $RPM_BUILD_ROOT%{_prefix}/bin/cpp@exe_ext@ \
#      $RPM_BUILD_ROOT%{_prefix}/bin/@target_alias@-cpp@exe_ext@
#  fi

  # gzip info files
  gzip -f $RPM_BUILD_ROOT%{_prefix}/info/*.info 2>/dev/null
  gzip -f $RPM_BUILD_ROOT%{_prefix}/info/*.info-? 2>/dev/null
  gzip -f $RPM_BUILD_ROOT%{_prefix}/info/*.info-?? 2>/dev/null

  rm -f dirs ;
  echo "%dir %{_prefix}/lib" >> dirs ;
  echo "%dir %{_prefix}/lib/gcc-lib" >> dirs ;
  echo "%dir %{_prefix}/lib/gcc-lib/@target_alias@" >> dirs ;

  # Collect multilib subdirectories
  f=`gcc/xgcc -Bgcc/ --print-multi-lib | sed -e 's,;.*$,,'`

  TGTDIR="%{_prefix}/lib/gcc-lib/@target_alias@/@gcc_version@"
  for i in $f; do
    case $i in
    \.) echo "%dir ${TGTDIR}" >> dirs
      ;;
    *)  echo "%dir ${TGTDIR}/$i" >> dirs
      ;;
    esac
  done

  TGTDIR="%{_prefix}/@target_alias@/lib"
  for i in $f; do
    case $i in
    \.) echo "%dir ${TGTDIR}" >> dirs
      ;;
    *)  echo "%dir ${TGTDIR}/$i" >> dirs
      ;;
    esac
  done

  # Collect files to go into different packages
  cp dirs files.gcc
  cp dirs files.g77
  cp dirs files.objc
  cp dirs files.gcj
  cp dirs files.g++

  TGTDIR="%{_prefix}/lib/gcc-lib/@target_alias@/@gcc_version@"
  f=`find ${RPM_BUILD_ROOT}${TGTDIR} ! -type d -print | sed -e "s,^$RPM_BUILD_ROOT,,g"`;
  for i in $f; do
    case $i in
    *lib*.la);; # ignore: gcc produces bogus libtool libs
    *f771) ;;
    *cc1obj) ;;
    *libobjc*) echo "$i" >> files.objc ;;
    *include/objc*) ;;
    *include/g++*);;
    *jc1) ;;
    *jvgenmain) ;;
    *cc1plus) ;; # ignore: explicitly put into rpm elsewhere
    *libstdc++.a) echo "$i" >> files.g++ ;;
    *libsupc++.a) echo "$i" >> files.g++ ;;
    *) echo "$i" >> files.gcc ;;
    esac
  done

  TGTDIR="%{_prefix}/@target_alias@/lib"
  f=`find ${RPM_BUILD_ROOT}${TGTDIR} ! -type d -print | sed -e "s,^$RPM_BUILD_ROOT,,g"`;
  for i in $f; do
    case $i in
    *lib*.la);; # ignore - gcc produces bogus libtool libs
    *libiberty.a) ;; # ignore - GPL'ed
# all other files belong to gcc
    *) echo "$i" >> files.gcc ;; 
    esac
  done

%clean
# let rpm --clean remove BuildRoot iif using the default BuildRoot
  test "$RPM_BUILD_ROOT" = "%{_tmppath}/%{name}" && \
    rm -rf $RPM_BUILD_ROOT
