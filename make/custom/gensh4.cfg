#
# gensh4.cfg
#
# default configuration for Hitachi SH7750 board
#
# Copyright (C) 2001 OKTET Ltd., St.-Petersburg, Russia
# Author: Victor V. Vengerov <vvv@oktet.ru>
#
#  $Id$
#

include $(RTEMS_ROOT)/make/custom/default.cfg

RTEMS_CPU=sh
RTEMS_CPU_MODEL=sh7750

# This is the actual bsp directory used during the build process.
RTEMS_BSP_FAMILY=gensh4

#
#  This contains the compiler options necessary to select the CPU model
#  and (hopefully) optimize for it.
#
# Seems to be good without initialisation FPSCR.
# Also works with SH4_FPSCR_DN bit set.
#CPU_CFLAGS= -m4-single-only -mfmovd -ml
#CPU_CFLAGS= -m4-single -ml
#
# It works with SH4_FPSCR_PR bit set
CPU_CFLAGS= -m4 -ml


# debug flags:
CFLAGS_DEBUG_V = -O0 -ggdb

# optimize flag: typically -0, could use -O4 or -fast
# -O4 is ok for RTEMS
CFLAGS_OPTIMIZE_V = -O4 

#  This section makes the target dependent options file.

#  START_HW_INIT
#     This switch selects whether 'early_hw_init()' is called from
#     'start.S'; 'bsp_hw_init()' is always called from 'bspstart.c'
#

define make-target-options
	@echo "#define START_HW_INIT 1"                     >>$@
endef


# The following are definitions of make-exe which will work using ld as
# is currently required.  It is expected that as of gcc 2.8, the end user
# will be able to override parts of the compilers specs and link using gcc.

ifeq ($(RTEMS_USE_GCC272),yes)
define make-exe
	$(LD) $(LDFLAGS) -N -e _start \
	    -T$(PROJECT_RELEASE)/lib/linkcmds\
	    -o $(basename $@).exe \
	    $(START_FILE) $(LINK_OBJS) --start-group $(LINK_LIBS) --end-group
	$(NM) -n $(basename $@).exe > $(basename $@).num
	$(SIZE) $(basename $@).exe
endef
else
define make-exe
	$(LINK.c) $(AM_CFLAGS) $(AM_LDFLAGS) -Wl,-Map,$(basename $@).map \
	    $(LDLIBS) -o $@ \
	    $(LINK_OBJS) $(LINK_LIBS)
	$(NM) -n $@ > $(basename $@).num
	$(SIZE) $@
endef
endif

# Miscellaneous additions go here
