#
#  Config file for a PowerPC MPC821- or MPC860-based MBX card
#
#  This file is derived from:
#
#  Config file for a PowerPC 403 based helas403 card
#  Config file for MPC860 based Ethernet Comm Board
#

include $(RTEMS_ROOT)/make/custom/default.cfg

RTEMS_CPU=powerpc
RTEMS_CPU_MODEL=mpc8xx

# This is the actual bsp directory used during the build process.
RTEMS_BSP_FAMILY=mbx8xx

# The value assigned to RTEMS_CPU, RTEMS_CPU_MODEL and RTEMS_BSP get
# #defined in targopts.h. Source code can switch on these values with #ifdef
# to select what code to compile for a specific CPU family member and specific
# board. The RTEMS_CPU_MODEL is also used as the name of the libcpu directory,
# while the RTEMS_BSP_FAMILY is used as the name of the libbsp directory.
# For the MBX860 and MBX821, the boards and processors are sufficiently
# similar that the ports are unified and use RTEMS_CPU_MODEL=mpc8xx and
# RTEMS_BSP_FAMILY=mbx8xx. Because there are minor differences in the CPUs
# and the boards, it is necessary to specify them fully during the build.
# Do a "make RTEMS_BSP=<your_board> <target>" See below for a list of valid
# values for <your_board>.

ifeq ($(findstring mbx821,$(RTEMS_MBX_MODEL)),mbx821)
CPU_TYPE=821
else
ifeq ($(findstring mbx860,$(RTEMS_MBX_MODEL)),mbx860)
CPU_TYPE=860
else
RTEMS_BSP = mbx860_002
RTEMS_MBX_MODEL = mbx860_002
TARGET_ARCH=o-mbx860_002
CPU_TYPE=860
endif # mbx860
endif # mbx821

#  This section makes the target dependent options file.
#
#  Note that RTEMS_BSP matches the RTEMS_MBX_MODEL. Its value must be
#  defined in targopts.h, so the few places that require different code
#  for different MBX models can be distinguished. The value of
#  RTEMS_BSP is already defined in targopts.h and is one of:
#     mbx860_001    mbx821_001
#     mbx860_002    mbx821_002
#     mbx860_003    mbx821_003
#     mbx860_004    mbx821_004
#     mbx860_005    mbx821_005
#     mbx860_001b   mbx821_001b
#     mbx860_002b   mbx821_002b
#     mbx860_003b   mbx821_003b
#     mbx860_004b   mbx821_004b
#     mbx860_005b   mbx821_005b
#     mbx860_006b   mbx821_006b

#  The specific CPU model is defined, so the few places that require
#  different code for the MPC860 and MPC821 can be distinguished.
#  Either mpc860 or mpc821 is defined.
#
#  MBX8xx-specific options:
#

define make-target-options
	@echo "#ifdef mpc$(CPU_TYPE)"                       >>$@
	@echo "#undef mpc$(CPU_TYPE)"                       >>$@
	@echo "#endif"                                      >>$@
	@echo "#define mpc$(CPU_TYPE) 1"                    >>$@
	@echo                                               >>$@
endef

#  This contains the compiler options necessary to select the CPU model
#  and (hopefully) optimize for it.
#
CPU_CFLAGS = -mcpu=$(CPU_TYPE)

CFLAGS_DEBUG_V += -ggdb
CXXFLAGS_DEBUG_V += -ggdb

# optimize flag: typically -O, could use -O4 or -fast
# -O4 is ok for RTEMS
# NOTE: some level of -O may be actually required by inline assembler
# CFLAGS_OPTIMIZE_V=-O4 -fno-keep-inline-functions
CFLAGS_OPTIMIZE_V=-O4 -fno-keep-inline-functions
CXXFLAGS_OPTIMIZE_V=-O4

# The following are definitions of make-exe which will work using ld as
# is currently required.  It is expected that as of gcc 2.8, the end user
# will be able to override parts of the compilers specs and link using gcc.

define make-exe
	$(LINK.c) $(AM_CFLAGS) $(AM_LDFLAGS) $(MBX8xx_LDFLAGS) \
	    -o $(basename $@)_sym.exe $(LINK_OBJS) $(LINK_LIBS)
	$(NM) -g -n $(basename $@)_sym.exe > $(basename $@).nm
	cp $(basename $@)_sym.exe $(basename $@).exe 
	$(STRIP) $(basename $@).exe
	$(SIZE) $(basename $@)_sym.exe
endef

# Miscellaneous additions go here

# Override default start file
START_BASE=

