#
#  Config file for the uC5282 BSP
#
#Based on:
#  $Id$
#
# A0.01 Initial Version                   BDS	07/26/01
#


RTEMS_CPU=m68k
RTEMS_CPU_MODEL=mcf5282

include $(RTEMS_ROOT)/make/custom/default.cfg

# This is the actual bsp directory used during the build process.
RTEMS_BSP_FAMILY=uC5282

#  This contains the compiler options necessary to select the CPU model
#  and (hopefully) optimize for it. 
CPU_CFLAGS = -m528x
CPU_ASFLAGS = -m528x

ASFLAGS = -m528x

# optimize flag: typically -0, could use -O4 or -fast, -O4 is ok for RTEMS
CFLAGS_OPTIMIZE_V= -O4 -fomit-frame-pointer

# This target does NOT support the KA9Q TCP/IP stack so ignore requests
# to enable it.
#HAS_KA9Q=yes

# Override default start file
#START_BASE=start5206

#  This section makes the target dependent options file.
#  NDEBUG (C library)
#     if defined asserts do not generate code.  This is commonly used
#     as a command line option.
#
#  RTEMS_TEST_NO_PAUSE (RTEMS tests)
#     do not pause between screens of output in the rtems tests
#
#  STACK_CHECKER_ON (RTEMS support code)
#     If defined, stack bounds checking is enabled.
#
#  STACK_CHECKER_REPORT_USAGE (RTEMS support code)
#     If this and STACK_CHECKER_ON are defined, then a report on stack usage
#     per task is printed when the program exits.
#
#  RTEMS_DEBUG (RTEMS)
#     If defined, debug checks in RTEMS and support library code are enabled.

define make-target-options
	@echo "/* #define NDEBUG 1 */ "                     >>$@
	@echo "#define RTEMS_TEST_NO_PAUSE 1"               >>$@
	@echo "/* #define STACK_CHECKER_ON  1 */"           >>$@
	@echo "/* #define STACK_CHECKER_REPORT_USAGE  1 */" >>$@
	@echo "/* #define RTEMS_DEBUG  1 */"                >>$@
endef


ifndef MTARGET
MTARGET=ram
endif


# The following are definitions of make-exe which will work using ld as
# is currently required.  It is expected that as of gcc 2.8, the end user
# will be able to override parts of the compilers specs and link using gcc.


define make-exe
	$(LINK.c) $(AM_CFLAGS) -m5200 $(AM_LDFLAGS) -qnolinkcmds -o $(basename $@).nxe \
	    $(LINK_OBJS) $(LINK_LIBS) -Wl,-Tlinkcmds
	$(OBJCOPY) -O binary --strip-all $(basename $@).nxe $@
	$(SIZE) $(basename $@).nxe
endef
define make-cxx-exe
	$(LINK.cc) $(AM_CFLAGS) -m5200 $(AM_LDFLAGS) -qnolinkcmds -o $(basename $@).nxe \
	    $(LINK_OBJS) $(LINK_LIBS) -Wl,-Tlinkcmds
	$(OBJCOPY) -O binary --strip-all $(basename $@).nxe $@
	$(SIZE) $(basename $@).nxe
endef

# Miscellaneous additions go here
