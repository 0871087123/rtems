#
#  Config file for HPUX running the posix bsp
#
#  $Id$
#

# Specify here the host and target "architectures"
HOST_ARCH=o-$(RTEMS_HOST)
TARGET_ARCH=o-$(RTEMS_BSP)

include $(RTEMS_ROOT)/make/main.cfg

RTEMS_CPU=unix
RTEMS_CPU_FAMILY=hppa1_1
RTEMS_CPU_MODEL=hppa7200
RTEMS_UNIX_FLAVOR=hpux

# This is the actual bsp directory used during the build process.
RTEMS_BSP_FAMILY=posix

# use the macros instead of the inline functions
# The macros work better when mixed with other compilers.
INLINE=macros
INLINE_UPCASE=MACRO

# HOST Compiler config file
# You may also want to specify where the compiler resides here.
CC_$(HOST_ARCH)_DIR=$(RTEMS_GNUTOOLS_HOST)
CONFIG.$(HOST_ARCH).CC	 = $(RTEMS_ROOT)/make/compilers/gcc.cfg

## Target compiler config file, if any
CC_$(TARGET_ARCH)_DIR=$(CC_$(HOST_ARCH)_DIR)
CONFIG.$(TARGET_ARCH).CC = $(RTEMS_ROOT)/make/compilers/gcc-hpux9.cfg

# Use the LIBC support for CYGNUS newlib
# RTEMS_LIBC_DIR must already be set (by module file)
RTEMS_USE_NEWLIB=yes

# The following define the memory reserved in the executable for the
# RTEMS Workspace and the C Program Heap.
# NOTE: some of the timing tests need > 1M workspace
LIBC_DEFINES += -DWORKSPACE_MB=2
LIBC_DEFINES += -DHEAPSPACE_MB=1

# Uncomment the following line if want stack checking should be enabled
#LIBC_DEFINES += -DSTACK_CHECKER_ON

# Define this to yes if C++ is included in the development environment.
# This requires that at least the GNU C++ compiler and libg++ be installed.
HAS_CPLUSPLUS=yes

# Define this to yes if this target supports multiprocessor environments.
HAS_MP=yes

# This target does NOT support the KA9Q TCP/IP stack so ignore requests
# to enable it.
HAS_KA9Q=no

# This target does NOT support the POSIX API.
HAS_POSIX_API=no

# Miscellaneous additions go here
