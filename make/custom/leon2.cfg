#
#  Config file for the European Space Agency ERC32 SPARC processor.
#
#  $Id$
#

include $(RTEMS_ROOT)/make/custom/default.cfg

RTEMS_CPU=sparc

ifeq ($(RTEMS_CPU_MODEL),leon1)
MSOFT_FLOAT = -msoft-float
else
RTEMS_CPU_MODEL=leon2
endif
# This is the actual bsp directory used during the build process.
RTEMS_BSP_FAMILY=leon

#   The -mflat avoids the use of save/restore instructions.  It has
#   a negative impact on the performance of RTEMS and should not be used.

ifeq ($(RTEMS_USE_GCC272),yes)
#     -mno-v8 says not to use v8 level instructions.  i.e. use v7 only
CPU_CFLAGS = -mno-v8 -mcypress $(MSOFT_FLOAT)
else
#     -mcpu=cypress says to optimize for a Cypress 60x chipset
CPU_CFLAGS = -mcpu=cypress $(MSOFT_FLOAT)
endif

# optimize flag: typically -0, could use -O4 or -fast
# -O4 is ok for RTEMS
CFLAGS_OPTIMIZE_V=-O4

#  This makes the target dependent options file

#  NO_TABLE_MOVE (SPARC PORT)
#     do not have a second trap table -- use the BSP's
#
#  CPU_U32_FIX (all)
#     Needed to align received TCP/IP packets since SPARC does not 
#     support unaligned memory access.
#

define make-target-options
	@echo "#define NO_TABLE_MOVE 1"                            >>$@
	@echo "#define CPU_U32_FIX 1"                              >>$@
endef



# The following are definitions of make-exe which will work using ld as
# is currently required.  It is expected that as of gcc 2.8, the end user
# will be able to override parts of the compilers specs and link using gcc.

ifeq ($(RTEMS_USE_GCC272),yes)
define make-exe
	$(LD) -u _sbrk $(LDFLAGS) -N -T $(LINKCMDS) -o $(basename $@).exe \
	    $(START_FILE) $(LINK_OBJS) --start-group $(LINK_LIBS) --end-group
	$(NM) -g -n $(basename $@).exe > $(basename $@).num
	$(SIZE) $(basename $@).exe
endef
else
define make-exe
	$(LINK.c) $(AM_CFLAGS) $(AM_LDFLAGS) -o $(basename $@).exe \
	    $(LINK_OBJS) $(LINK_LIBS)
	$(NM) -g -n $(basename $@).exe > $(basename $@).num
	$(SIZE) $(basename $@).exe
endef
endif
# Miscellaneous additions go here

