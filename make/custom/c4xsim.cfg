# 
#  Configuration file for the GDB C4x simulator
#
#  $Id$
#

include $(RTEMS_ROOT)/make/custom/default.cfg

ifeq ($(RTEMS_CPU_MODEL),)
RTEMS_BSP=c4xsim
RTEMS_CPU_MODEL=c40
CPU_CFLAGS=-mcpu=40 #-msmall
endif

# XXX add this temporarily until c4x-rtems target defines this. 
CPU_CFLAGS += -D__rtems__

# This is the actual bsp directory used during the build process.
RTEMS_BSP_FAMILY=c4xsim

# optimize flag: typically -0, could use -O4 or -fast
# -O4 is ok for RTEMS
# -O4 is broken for the moment on the C4x gcc
#CFLAGS_OPTIMIZE_V=-O4 
CFLAGS_OPTIMIZE_V=-O1

#  This section makes the target dependent options file.
#  NDEBUG (C library)
#     if defined asserts do not generate code.  This is commonly used
#     as a command line option.
#
#  RTEMS_TEST_NO_PAUSE (RTEMS tests)
#     do not pause between screens of output in the rtems tests
#
#  RTEMS_DEBUG (RTEMS)
#     If defined, debug checks in RTEMS and support library code are enabled.
#

define make-target-options
	@echo "/* #define NDEBUG 1 */ "                     >>$@
	@echo "#define RTEMS_TEST_NO_PAUSE 1"               >>$@
	@echo "/* #define RTEMS_DEBUG  1 */"                >>$@
endef

# this target has no start file
START_BASE=

# The following are definitions of make-exe which will work using ld as
# is currently required.  It is expected that as of gcc 2.8, the end user
# will be able to override parts of the compilers specs and link using gcc.

define make-exe
	$(CC) $(CPPFLAGS) $(CFLAGS) -o $(basename $@).exe \
	    $(LINK_OBJS) $(LINK_LIBS)
	$(NM) -g -n $@ > $(basename $@).num
	$(SIZE) $@
endef

# Miscellaneous additions go here
